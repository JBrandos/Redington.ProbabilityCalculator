@model CalculatorViewModel

@{
    ViewBag.Title = "Calculator";
}

<h2>Calculator</h2>

@using (Html.BeginForm())
{
    <div class="form-group">
        @Html.LabelFor(model => model.Probability1, new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Probability1, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Probability2, new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Probability2, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CalculationType, new { @class = "control-label" })
        @Html.DropDownListFor(model => model.CalculationType, new SelectList(Enum.GetValues(typeof(CalculationType))), "-- Select Calculation Type --", new { @class = "form-control" })
    </div>

    <button type="submit" class="btn btn-primary">Calculate</button>

    @if (ViewData.ModelState.IsValid == false)
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var property in ViewData.ModelState.Keys)
                {
                    foreach (var error in ViewData.ModelState[property]!.Errors)
                    {
                        <li>@(property + ": " + error.ErrorMessage)</li>
                    }
                }
            </ul>
        </div>
    }
}

@if (Model.Result != null)
{
    <div class="alert alert-success" role="alert">Result: @Model.Result</div>
}